---
- name: Verify Linux distribution version
  ansible.builtin.assert:
    that:
      - ansible_facts['distribution'] == 'Ubuntu'
      - ansible_facts['distribution_version'] == '22.04'
    fail_msg: "Supports Ubuntu versions 22.04. Detected: {{ ansible_facts['distribution'] }} {{ ansible_facts['distribution_version'] }}."
    success_msg: "Running on Ubuntu {{ ansible_facts['distribution_version'] }}."

- name: Ensure apt cache is up-to-date
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600

- name: Add Docker GPG key
  ansible.builtin.apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    state: present

- name: Add Docker apt repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
    filename: docker

- name: Update apt cache after adding repo
  ansible.builtin.apt:
    update_cache: true

- name: Pin package versions prior to installation
  ansible.builtin.set_fact:
    package_versions:
      ubuntu:
        docker-ce: "docker-ce=5:28.3.3-1~ubuntu.22.04~jammy"
        docker-ce-cli: "docker-ce-cli=5:28.3.3-1~ubuntu.22.04~jammy"
        containerd.io: "containerd.io=1.7.27-1"

- name: Install Docker packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    allow_downgrade: true
  loop:
    - "{{ package_versions['ubuntu']['docker-ce'] }}"
    - "{{ package_versions['ubuntu']['docker-ce-cli'] }}"
    - "{{ package_versions['ubuntu']['containerd.io'] }}"

- name: Ensure docker service is enabled and started
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
    state: started
  loop:
    - docker
    - containerd

- name: Create ha-proxy-certbot directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  loop:
    - "/opt/ha-proxy-certbot"
    - "/opt/ha-proxy-certbot/haproxy"
    - "/opt/ha-proxy-certbot/haproxy/config"

- name: Template docker-compose.yml
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "/opt/ha-proxy-certbot/docker-compose.yml"
    owner: root
    group: root
    mode: "0644"
  notify:
    - Deploy ha-proxy-certbot compose

- name: Template haproxy.cfg
  ansible.builtin.template:
    src: haproxy.cfg.j2
    dest: /opt/ha-proxy-certbot/haproxy/config/haproxy.cfg
    owner: root
    group: root
    mode: "0755"

- name: Gather package facts
  ansible.builtin.package_facts:
    manager: auto

- name: List installed package versions
  ansible.builtin.debug:
    msg:
      - "docker-ce: {{ ansible_facts.packages['docker-ce'][0].version }}"
      - "docker-ce-cli: {{ ansible_facts.packages['docker-ce-cli'][0].version }}"
      - "containerd.io: {{ ansible_facts.packages['containerd.io'][0].version }}"
      - "docker-compose-plugin: {{ ansible_facts.packages['docker-compose-plugin'][0].version }}"
